version: '3'

networks:
  laravel:


services:
  app:
    build:
      context: ./docker/production/caddy
      dockerfile: Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
        - DOMAIN_EMAIL=${DOMAIN_EMAIL}
        - APP_URL=${APP_URL}
    tty: true
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./docker/production/caddy/Caddyfile:/etc/caddy/Caddyfile
      - .:/var/www/html
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - php
      - mysql
      - redis
      - node
    networks:
      - laravel
    environment:
      APP_URL: ${APP_URL:-localhost}
      DOMAIN_EMAIL: ${DOMAIN_EMAIL}
  #    command: "sh /nginx-start.sh"

  mysql:
    image: mysql:8.0
    restart: unless-stopped
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    networks:
      - laravel

  php:
    build:
      context: ./docker/production
      dockerfile: php-fpm/Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    ports:
      - "9000:9000"
    tty: true
    volumes:
      - .:/var/www/html:delegated
    networks:
      - laravel
    command: "sh /php-fpm/supervisor/start.sh"

  redis:
    image: redis:alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - laravel
  node:
    image: node:21-alpine
    build:
      context: ./docker/production
      dockerfile: node/Dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    volumes:
      - .:/var/www/html
    ports:
      - "5173:5173"
    tty: true
    networks:
      - laravel
volumes:
  certs:
  caddy_data:
    external: true
  caddy_config:

